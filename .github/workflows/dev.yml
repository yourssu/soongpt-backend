name: Dev - Build and Deploy to EC2

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    defaults:
      run:
        working-directory: ./

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean Build with Gradle (with Testing)
        run: |
          ./gradlew clean build

      - name: Deploy to EC2
        env:
          YOURSSU_PEM: ${{ secrets.YOURSSU_PEM }}
          HOST_URL: ${{ vars.HOST_URL }}

          SERVER_PORT: ${{ vars.SERVER_PORT }}
          CORS_ALLOWED_ORIGIN: ${{ vars.CORS_ALLOWED_ORIGIN }}

          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

          PROJECT_NAME: ${{ vars.PROJECT_NAME }}
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}

          SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
          SLACK_LOG_CHANNEL: ${{ vars.SLACK_LOG_CHANNEL }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST_URL >> ~/.ssh/known_hosts
          echo "$YOURSSU_PEM" > yourssu.pem
          chmod 600 yourssu.pem
          mv build/libs/$PROJECT_NAME-0.0.1-SNAPSHOT.jar yourssu-$PROJECT_NAME-application.jar
          
          # Create deployment directory structure
          ssh -i yourssu.pem ubuntu@$HOST_URL "mkdir -p /home/ubuntu/$PROJECT_NAME-api/logs"
          
          # Deploy JAR file
          scp -i yourssu.pem yourssu-$PROJECT_NAME-application.jar ubuntu@$HOST_URL:/home/ubuntu/$PROJECT_NAME-api/
          
          # Create environment file
          echo "SERVER_PORT=$SERVER_PORT" >> .env
          echo "CORS_ALLOWED_ORIGIN=$CORS_ALLOWED_ORIGIN" >> .env
          
          echo "DB_URL=$DB_URL" >> .env
          echo "DB_USERNAME=$DB_USERNAME" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          
          echo "PROJECT_NAME=$PROJECT_NAME" >> .env
          echo "ENVIRONMENT=$ENVIRONMENT" >> .env
          
          echo "SLACK_CHANNEL=$SLACK_CHANNEL" >> .env
          echo "SLACK_LOG_CHANNEL=$SLACK_LOG_CHANNEL" >> .env
          echo "SLACK_TOKEN=$SLACK_TOKEN" >> .env
          
          # Deploy environment file
          scp -i yourssu.pem .env ubuntu@$HOST_URL:/home/ubuntu/$PROJECT_NAME-api/
          
          # Deploy entire script folder contents to $PROJECT_NAME-api directory
          scp -i yourssu.pem -r script/* ubuntu@$HOST_URL:/home/ubuntu/$PROJECT_NAME-api/
          
          # Set execute permissions for all script files
          ssh -i yourssu.pem ubuntu@$HOST_URL "find /home/ubuntu/$PROJECT_NAME-api -type f -name '*.sh' -exec chmod +x {} \;"
          ssh -i yourssu.pem ubuntu@$HOST_URL "find /home/ubuntu/$PROJECT_NAME-api -type f -name '*.py' -exec chmod +x {} \;"
          
          # Execute deployment script
          ssh -i yourssu.pem ubuntu@$HOST_URL "/home/ubuntu/$PROJECT_NAME-api/run.sh"
